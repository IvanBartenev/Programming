#include <stdio.h>
#include <locale.h>
#include <math.h>
#include <malloc.h>
#include <stdlib.h>

#define PI 3.1415926535

typedef double (*Funcional)(double);

void menu();
double f1(double x);
double f2(double x);
double* step_func(Funcional func, double lb, double rb, double step);
int print_func(Funcional func, double lb, double rb, double step);


void main()
{
	setlocale(0, "Russian");
	double x;
	double* res;
	int ans;
	char lb, rb;
	double lNum, rNum, step;
	menu();
	scanf("%d", &ans);
	while (ans != 5) {
		switch (ans) {
		case 1:
			printf("\nВведите значение x: ");
			scanf("%lf", &x);
			printf("\nY(%.2lf)=%.2lf", x, f1(x));
			break;
		case 2:
			printf("\nВведите значение x: ");
			scanf("%lf", &x);
			printf("\nV(%.2lf)=%.2lf", x, f2(x));
			break;
		case 3:
			getchar();
			printf("Введите интервал функции (Примеры ввода: (1;2,5), [2;4,25] ): ");
			scanf("\n%c%lf;%lf%c", &lb, &lNum, &rNum, &rb);
			printf("\n%c%.2lf;%.2lf%c", lb, lNum, rNum, rb);
			if (lNum > rNum) {
				printf("\n\nОшибка: Значение левой границы интервала больше значения правой границы интервала.");
			}
			if ((lb == '(' || lb == '[') && (rb == ')' || rb == ']')) {
				getchar();
			}
			else {
				puts("\n\nОшибка: Вы ввели невозможный символ для границы границы");
				break;
			}
			printf("\n\nВведите значение шага функции: ");
			scanf("%lf", &step);
			if (rb == ')') {
				rNum = rNum - step;
			}
			if (lb == '(') {
				lNum = lNum + step;
			}
			res = step_func(f1, lNum, rNum, step);
			print_func(f1, lNum, rNum, step);
			break;
		case 4:
			getchar();
			printf("Введите интервал функции (Примеры ввода: (1;2,5), [2;4,25] ): ");
			scanf("\n%c%lf;%lf%c", &lb, &lNum, &rNum, &rb);
			printf("\n%c%.2lf;%.2lf%c", lb, lNum, rNum, rb);
			if (lNum > rNum) {
				printf("\n\nОшибка: Значение левой границы интервала больше значения правой границы интервала.");
			}
			if ((lb == '(' || lb == '[') && (rb == ')' || rb == ']')) {
				getchar();
			}
			else {
				puts("\n\nОшибка: Вы ввели невозможный символ для границы");
				break;
			}
			printf("\n\nВведите значение шага функции: ");
			scanf("%lf", &step);
			if (rb == ')') {
				rNum = rNum - step;
			}
			if (lb == '(') {
				lNum = lNum + step;
			}
			res = step_func(f2, lNum, rNum, step);
			print_func(f2, lNum, rNum, step);
			break;
		default:
			printf("\nОшибка: Вы ввели несуществующий пункт меню. Попробуйте снова:");
		}
		printf("\n\nВведите номер пункта меню: ");
		getchar();
		scanf("%d", &ans);
	}

	return 0;
}

void menu()
{
	printf("|* * * * * * * * * * * * * * * Меню  программы * * * * * * * * * * * * * * * *|\n");
	printf("|                                                                             |\n");
	printf("|1.Вычислить значение функции Y(x).                                           |\n");
	printf("|2.Вычислить значение функции V(x).                                           |\n");
	printf("|3.Вычислить значение функции Y(x) с заданным интервалом и шагом.             |\n");
	printf("|4.Вычислить значение функции V(x) с заданным интервалом и шагом.             |\n");
	printf("|5.Выйти из программы.                                                        |\n");
	printf("|                                                                             |\n");
	printf("|* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *|\n");
	puts("\n\nВведите номер пункта меню : ");
	return 0;
}

double f1(double x)
{
	double res;
	res = pow(x, 3) + (x / (sin(x / 57.3)));
	return res;
}

double f2(double x)
{
	double res;
	if (x < 10) { res = (((1. / 2) * pow(x, 2)) - sin(x / 57.3)); }
		else if (x >= 10 && x <= 15) { res = exp(x + 1); }
			else { res = sin((pow(x, 2) + 1) / 57.3); }
	return res;
}

double* step_func(Funcional func, double lb, double rb, double step)
{
	double* result = (double*)malloc(((rb - lb) / step) * sizeof(double));
	double count = lb;
	for (int i = 0; i <= (rb - lb) / step; i++)
	{
		result[i] = func(count);
		count += step;
	}
	return result;
}

int print_func(Funcional func, double lb, double rb, double step)
{
	puts("\n");
	for (double x = lb; x <= rb; x += step) {
		printf("| x = %9.3f | y = %9.3f |\n", x, func(x));
	}
	puts("\n");
	return 0;
}
